<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PILOSA.EU</title><link>http://pilosa.eu/</link><description></description><atom:link href="http://pilosa.eu/feed.xml" rel="self"></atom:link><lastBuildDate>Tue, 24 Mar 2015 00:00:00 +0100</lastBuildDate><item><title>Dynamic Default Attributes in an ArcGIS PythonÂ Toolbox</title><link>http://pilosa.eu/blog/2015/03/24/dynamic-default-attributes-in-arcgis-python-toolbox/</link><description>&lt;p&gt;Once upon a time, on a computer not that far away, there was a ArcGIS python toolbox. This python toolbox contained a tool with a set of parameters. The values for these parameters would remain (slight variatons of) the same value for a long time. However, sometimes one or more parameter values would change drastically, which would make the newly supplied value the new default&amp;nbsp;value.&lt;/p&gt;
&lt;p&gt;This blogpost contains an overview of my struggles trying to enforce this behavior. The original tool uses a logfile from which the parameter values are read during initialization and to which the parameter values are written when the tool is executed. In this example I will simply use the current time as my &amp;#8220;external datasource&amp;#8221;. The tool will read out the current time, use it as a default value for its only parameter and print the value of this parameter to the message dialog. Using this approach, I can more precisely identify what is happening and an what moment exactly the default value of the tool is being&amp;nbsp;set.&lt;/p&gt;
&lt;h1 id="getparameterinfo"&gt;getParameterInfo&lt;/h1&gt;
&lt;p&gt;I expected an ArcGIS tool to be constructed when the tool is being opened by a user and to be destroyed after the tool has either been run or has been cancelled by the user. This would imply that the parameters, so my first attempt at &amp;#8220;timetool.pyt&amp;#8221; looked as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TimeTool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define the tool (tool name is the name of the class).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Present time&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Prints a message with the present time&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;canRunInBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getParameterInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define parameter definitions&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;present_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;displayName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Present time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;present_time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;datatype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;String&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;parameterType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Required&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Input&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c"&gt;# supply a start value for the parameter as suggested value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c"&gt;# during the initialization of the tool:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;present_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;present_time&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isLicensed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Set whether tool is licensed to execute.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Modify the values and properties of parameters before internal&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        validation is performed.  This method is called whenever a parameter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        has been changed.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Modify the messages created by internal validation for each tool&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        parameter.  This method is called after internal validation.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The source code of the tool.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Toolbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define the toolbox (the name of the toolbox&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;            is the name of the .pyt file).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;TimeTool_Toolbox&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Toolbox with TimeTool&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TimeTool&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first time I started this tool, it was working as intended. Yet, some further testing showed that its behavior didn&amp;#8217;t correspond to what it should&amp;nbsp;be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open the tool, cancel execution, then restart:&lt;/strong&gt; our entry box is populated with the value we received when we started the tool for the first&amp;nbsp;time;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running the tool with default input, then restart:&lt;/strong&gt; our entry box is populated with the value we received when we started the tool for the first&amp;nbsp;time;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running the tool with modified input value, then restart:&lt;/strong&gt; during the first run our modified value is being printed, during the second run our entry box is still populated with the value we received when we started the tool for the first&amp;nbsp;time;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opening an entirely new &lt;span class="caps"&gt;MXD&lt;/span&gt;&lt;/strong&gt;: even after opening a new &lt;span class="caps"&gt;MXD&lt;/span&gt;, our entry box is still populated with the value we received when we started the tool for the first&amp;nbsp;time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A pattern is emerging: the default value of the parameter is set during the first time the tool is being opened the ArcMAP session. The tool appears to be constructed during the first time it is being opened, then kept in memory for future&amp;nbsp;use.&lt;/p&gt;
&lt;h1 id="updateparameters"&gt;updateParameters&lt;/h1&gt;
&lt;p&gt;Conclusion is that we need to find another way capture the event of an user starting up the tool. Unfortunately, the &lt;a href="http://resources.arcgis.com/en/help/main/10.2/index.html#//001500000024000000"&gt;ArcGIS help pages&lt;/a&gt; do not provide us with a &amp;#8220;InitializeParameters&amp;#8221; method. It does however give us the &amp;#8220;updateParameters&amp;#8221; method, which is being called whenever a parameter has been changed. Apparently one or more parameters do change when a tool is being opened, since execution of the method is triggered when opening a&amp;nbsp;tool.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TimeTool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define the tool (tool name is the name of the class).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Present time&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Prints a message with the present time&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;canRunInBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getParameterInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define parameter definitions&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;present_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;displayName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Present time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;present_time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;datatype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;String&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;parameterType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Required&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Input&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;present_time&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isLicensed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Set whether tool is licensed to execute.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Modify the values and properties of parameters before internal&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        validation is performed.  This method is called whenever a parameter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        has been changed.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c"&gt;# supply a start value for the parameter as suggested value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c"&gt;# when the parameter does not yet have a value:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Modify the messages created by internal validation for each tool&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        parameter.  This method is called after internal validation.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The source code of the tool.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Toolbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Define the toolbox (the name of the toolbox&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;            is the name of the .pyt file).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;TimeTool_Toolbox&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Toolbox with TimeTool&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TimeTool&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Testing the behavior of the tool now gives the following&amp;nbsp;results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open the tool, cancel execution, then restart:&lt;/strong&gt; our entry box is populated with a new value when we restart the&amp;nbsp;tool;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running the tool with default input, then restart:&lt;/strong&gt; our entry box is populated with a new value when we restart the&amp;nbsp;tool;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running the tool with modified input value, then restart:&lt;/strong&gt; during the first run our modified value is being printed, during the second run our entry box is populated with a new&amp;nbsp;value;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opening an entirely new &lt;span class="caps"&gt;MXD&lt;/span&gt;&lt;/strong&gt;: our entry box is populated with a new value when we restart the&amp;nbsp;tool;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open the tool, delete the contents of our entry box&lt;/strong&gt;: our entry box is populated with a new&amp;nbsp;value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, a pattern is emerging: the default value of the parameter is set evertime the users opens the tool. For our original usecase, this approach will do the trick. It still is some kind of work-around though, and has the following&amp;nbsp;drawbacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deleting the contents from the entry box will result in the entry box being&amp;nbsp;repopulated;&lt;/li&gt;
&lt;li&gt;This approach will only work for required parameters. If it is used for optional parameters, the parameter will be given the value of our suggestion if kept&amp;nbsp;blank.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using a precondition with a sensible combination of required parameters should be enough to soothen these drawbacks and make the tool usable. A hidden quirk will still persist though, if a user would delete the values for the chosen set of parameters &lt;i class="fa fa-frown-o"&gt;&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;In an attempt to remove this quirk, I have been trying to give the tool an extra attribute &amp;#8220;self.initialized&amp;#8221; and use this attribute as my precondition. Using this approach did not succeed due to the following&amp;nbsp;issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We might be able to attribute to False in the execution method of the tool. But how-to how to set this to False on&amp;nbsp;cancel?&lt;/li&gt;
&lt;li&gt;Modifying a tool&amp;#8217;s attributes outside the initialization method does not seem to&amp;nbsp;work.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I have not been able to find a way to capture the moment at which the parameters of the tool are being initialized. The updateParameters method does provide sufficient possibilities to come up with an usable&amp;nbsp;work-around.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Tue, 24 Mar 2015 00:00:00 +0100</pubDate><guid>tag:pilosa.eu,2015-03-24:blog/2015/03/24/dynamic-default-attributes-in-arcgis-python-toolbox/</guid><category>Python</category><category>ESRI</category><category>ArcGIS</category></item><item><title>EPA SWMM / Giswater Tutorial 4: CreatingÂ Conduits</title><link>http://pilosa.eu/blog/2014/11/11/swmm-giswater-tutorial-4-creating-conduits/</link><description>&lt;p&gt;This is the 4&lt;sup&gt;th&lt;/sup&gt; episode in my tutorial on using &lt;span class="caps"&gt;EPA&lt;/span&gt; Storm Water Management Model (&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;) and Giswater for rainfall-runoff modeling for an urban drainage network system. This episodes describes how to create conduits in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;, using &lt;span class="caps"&gt;QGIS&lt;/span&gt; and using &lt;span class="caps"&gt;SQL&lt;/span&gt; insert&amp;nbsp;statements.&lt;/p&gt;
&lt;p&gt;The wonderful &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; help provides us with the following information on&amp;nbsp;conduits:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conduits are pipes or channels that move water from one node to another in the conveyance system.
  Their cross-sectional shapes can be selected from a variety of standard open and closed geometries.
  Irregular natural cross-section shapes are also supported, as are user-defined closed&amp;nbsp;shapes.&lt;/p&gt;
&lt;p&gt;The principal input parameters for conduits&amp;nbsp;are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Names of the inlet and outlet&amp;nbsp;nodes;&lt;/li&gt;
&lt;li&gt;Offset depth or elevation of the conduit above the inlet and outlet node&amp;nbsp;inverts;&lt;/li&gt;
&lt;li&gt;Conduit&amp;nbsp;length;&lt;/li&gt;
&lt;li&gt;Manning&amp;#8217;s&amp;nbsp;roughness;&lt;/li&gt;
&lt;li&gt;Cross-sectional geometry  (profile describing parameters and the number of&amp;nbsp;barrels);&lt;/li&gt;
&lt;li&gt;Loss coefficients (headloss coefficients for the entrance, exit and average along the length of the&amp;nbsp;conduit);&lt;/li&gt;
&lt;li&gt;Presence of a flap gate to prevent reverse&amp;nbsp;flow;&lt;/li&gt;
&lt;li&gt;Inlet geometry code number if conduit acts as a&amp;nbsp;culvert.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conduits designated as culverts are checked continuously during dynamic wave flow routing
  to see if they operate under Inlet Control as defined in the Federal Highway Administration&amp;#8217;s
  publication Hydraulic Design of Highway Culverts (Publication No. &lt;span class="caps"&gt;FHWA&lt;/span&gt;-&lt;span class="caps"&gt;NHI&lt;/span&gt;-01-020, May&amp;nbsp;2005).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Attributes that can be supplied, yet not mentioned as principal input parameters&amp;nbsp;are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial flow in the conduit at the start of the&amp;nbsp;simulation;&lt;/li&gt;
&lt;li&gt;Maximum flow allowed in the conduit (use 0 or leave blank if not&amp;nbsp;applicable);&lt;/li&gt;
&lt;li&gt;Maximum depth of the conduit&amp;#8217;s cross&amp;nbsp;section;&lt;/li&gt;
&lt;li&gt;Culvert code number of inlet geometry if conduit is a culvert subject to possible inlet flow control (leave blank&amp;nbsp;otherwise).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Similar to the junctions, there are some other attributes that may seem trivial, yet still require&amp;nbsp;attention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometry;&lt;/li&gt;
&lt;li&gt;ArcID.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="arc-node-topology"&gt;&lt;span class="caps"&gt;ARC&lt;/span&gt;-&lt;span class="caps"&gt;NODE&lt;/span&gt; &lt;span class="caps"&gt;TOPOLOGY&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; is modelling the drainage system using an Arc-Node Topological Model. Such a topology exerts some rules of the objects in order to maintain network&amp;nbsp;integrity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A node is an intersection point where two or more arcs meet. Can also occur at the end of a âdanglingâ arc (i.e. an arc that is not connected to another&amp;nbsp;arc);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An arc is defined as a line vector that start and end at a node. Arcs can either be straight line vectors between two nodes or consist of multiple segments that together form the connection between two nodes. The (optional) points along an arc that define its shape are called&amp;nbsp;Vertices;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every Arc has a direction (which may or may not be the same as the hydraulic&amp;nbsp;direction).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rules described above, result in the following behavior of the&amp;nbsp;objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new arc can only be constructed as a connection between 2 separate existing&amp;nbsp;nodes;&lt;/li&gt;
&lt;li&gt;If an arc is deleted, nodes that were previously connected are not&amp;nbsp;affected;&lt;/li&gt;
&lt;li&gt;If a node is deleted, arcs that were previously connected are deleted as&amp;nbsp;well;&lt;/li&gt;
&lt;li&gt;If the geometry of an arc is modified, the new geometry should also connect two separate existing&amp;nbsp;nodes.&lt;/li&gt;
&lt;li&gt;If a node is moved to a new position, geometry of the connected arcs is updated&amp;nbsp;accordingly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="epa-swmm"&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The graphical user interface of &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; provides two ways to create a new&amp;nbsp;conduit:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is possible to draw a new conduit on the map. In this case the inlet node, outlet node and direction on how the conduit is drawn. These conduits can either be straight lines or contain additional&amp;nbsp;vertices.&lt;/li&gt;
&lt;li&gt;The other way around is to usting the &amp;#8220;Add new&amp;#8221; button. Using this approach, a conduit is drawn as a straight line between the last two junctions that have been&amp;nbsp;drawn.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In both cases, an ArcID is automatically generated using an autoincrementor, with the prefixes and increment supplied in the project defaults (see &lt;a href="/blog/2014/09/20/swmm-giswater-tutorial-2-project-setup/"&gt;Episode 2: Project Setup&lt;/a&gt;). It is possible to replace this automatically generated ArcID with your own value, yet each node should have an unique &lt;span class="caps"&gt;ID&lt;/span&gt;. This constrained is enforced by the&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Double-clicking on a conduit opens it&amp;#8217;s attribute form in which the attributes can be modified. elected reaches can be removed by pressing the &amp;#8220;Delete&amp;#8221; key on your keyboard, or by using the &amp;#8220;Delete object&amp;#8221; button next to the &amp;#8220;Add new&amp;#8221; button. Pressing the right mouse button on a conduit, opens a context menu with the following&amp;nbsp;options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy / paste: transfer attributes from one conduit to&amp;nbsp;another;&lt;/li&gt;
&lt;li&gt;Delete: delete the&amp;nbsp;conduit;&lt;/li&gt;
&lt;li&gt;Reverse: reverse the direction of the conduit (i.e. exchange inlet node and outlet node&amp;nbsp;properties);&lt;/li&gt;
&lt;li&gt;Convert to: convert the object type to one of the other object types that can form an arc (pump, orifice, weir &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;outlet);&lt;/li&gt;
&lt;li&gt;Vertices: start editing the vertices of the&amp;nbsp;conduit;&lt;/li&gt;
&lt;li&gt;Properties: open the attribute form for the&amp;nbsp;conduit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="SWMM_create_conduit" src="/images/SWMM_create_conduit.png" title="Creating a conduit in EPA SWMM." /&gt;&lt;/p&gt;
&lt;p&gt;The inlet node and outlet node of a conduit can only be changed using the attribute form. If one of these values is changed, the geometry of the conduit is updated accordingly. If the inlet node is changed, the segment that connects the original inlet node with the second vertex (second-to-last for the outlet node) is replaced with a straight segment from this vertex to the new inlet&amp;nbsp;node.&lt;/p&gt;
&lt;h1 id="giswater-qgis-as-frontdoor"&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;: &lt;span class="caps"&gt;QGIS&lt;/span&gt; &lt;span class="caps"&gt;AS&lt;/span&gt; &lt;span class="caps"&gt;FRONTDOOR&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The Giswater equivalent of drawing a conduit in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; directly, would be to draw a new feature in in the conduit layer of the corresponding &lt;span class="caps"&gt;GIS&lt;/span&gt;-project. However, whereas in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; the cross-sectional geometry and roughness coefficient are attributes of each reach, &lt;span class="caps"&gt;GISWATER&lt;/span&gt; uses a different approach. &lt;span class="caps"&gt;GISWATER&lt;/span&gt; is using lookup tables for the profile definitions and materials (with their manning roughness coefficient as an attribute). The profile definition and material are not mandatory attributes of a conduit, yet conduits without a cross-section geometry do not make sense. Therefore, we need at least one profile definition and material definition to choose before we can create a&amp;nbsp;conduit.&lt;/p&gt;
&lt;h3 id="material-pipe-profile-definitions"&gt;Material &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; pipe profile&amp;nbsp;definitions&lt;/h3&gt;
&lt;p&gt;Material and profile definitions could be created and modified by editing the administrative tables in &lt;span class="caps"&gt;QGIS&lt;/span&gt; or by executing &lt;span class="caps"&gt;SQL&lt;/span&gt;-statements. The developers of &lt;span class="caps"&gt;GISWATER&lt;/span&gt; have been so kind to provide a functionality for managing material (&lt;strong&gt;Data&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Materials catalog&lt;/strong&gt;) and profile definitions (&lt;strong&gt;Data&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Arc catalog&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Using these catalogs to manage material definitions is straight-forward&lt;sup id="fnref:cat_mat"&gt;&lt;a class="footnote-ref" href="#fn:cat_mat" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.
Only thing to only thing is one has to realize that &amp;#8220;n&amp;#8221; is the Manning&amp;#8217;s roughness coefficient. For profile definitions however, we have an issue: how do we know the meaning of the editable fields? When a shape is selected in th cross-section editor of &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;, an appropriate set of edit fields appears for describing the dimensions of that shape. However, with &lt;span class="caps"&gt;GISWATER&lt;/span&gt;, only the field names of the underlying database fields are visible as labels. With names like &amp;#8220;Geom1&amp;#8221;, &amp;#8220;Geom2&amp;#8221;, &amp;#8220;Geom3&amp;#8221; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &amp;#8220;Geom4&amp;#8221;, this does not provide much help. Only way I managed to create correct profiles is to create the profiles in the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; interface and reverse engineer the meaning of the parameters for the different shapes from the resulting &lt;span class="caps"&gt;INP&lt;/span&gt;-file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Giswater_cat_arc" src="/images/Giswater_cat_arc.png" title="Arc catalogue in GISWATER." /&gt;&lt;/p&gt;
&lt;h3 id="drawing-conduits"&gt;Drawing&amp;nbsp;conduits&lt;/h3&gt;
&lt;p&gt;The drawing process for the conduits is very similar to the process described for &lt;a href="/blog/2014/10/09/swmm-giswater-tutorial-3-creating-junctions"&gt;junctions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="QGIS_create_conduits" src="/images/QGIS_create_conduits.png" title="Creating a conduit in QGIS." /&gt;&lt;/p&gt;
&lt;p&gt;Notable differences&amp;nbsp;are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The conduits are directional lines. An arrow is showing the direction on the&amp;nbsp;map;&lt;/li&gt;
&lt;li&gt;Material definitions and profile definitions have to be created in the corresponding lookup&amp;nbsp;tables;&lt;/li&gt;
&lt;li&gt;Whereas junctions can be located freely, conduits should always connect two separate existing nodes. If this requirement is not met, trying to save the conduit will result in a commit&amp;nbsp;error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="QGIS_conduit_commit_error" src="/images/QGIS_conduit_commit_error.png" title="Commit error for unconnected arc." /&gt;&lt;/p&gt;
&lt;h1 id="giswater-sql-as-backdoor"&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;: &lt;span class="caps"&gt;SQL&lt;/span&gt; &lt;span class="caps"&gt;AS&lt;/span&gt; &lt;span class="caps"&gt;BACKDOOR&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The same recipe as used for the junctions, will also work for the conduits. The following python code generates insert statements for 3 conduits that connect the junctions that were placed in a strictly random street somewhere in the east of the Netherlands during &lt;a href="/blog/2014/10/09/swmm-giswater-tutorial-3-creating-junctions"&gt;Episode 3: Creating Junctions&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ppygis&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;psycopg2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;SRID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;28992&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tutorial&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;v_inp_edit_junction&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;(node_id, top_elev, ymax, y0, ysur, apond, sector_id, the_geom)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;r&amp;#39;INSERT INTO &amp;quot;{0}&amp;quot;.&amp;quot;{1}&amp;quot; {2} VALUES (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;);&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_fields&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conduit_view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;v_inp_edit_conduit&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conduit_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;(arc_id, z1, z2, arccat_id, matcat_id, barrels, culvert, kentry, kexit, kavg, flap, q0, qmax, sector_id, the_geom)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conduit_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;r&amp;#39;INSERT INTO &amp;quot;{0}&amp;quot;.&amp;quot;{1}&amp;quot; {2} VALUES (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;);&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conduit_view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conduit_fields&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Junction&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    This is a junction&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        Constructor&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MaxDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;           &lt;span class="c"&gt;# take values from connected reaches&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;          &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SurchargeDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="c"&gt;# optional, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PondingArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="c"&gt;# optional, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;        &lt;span class="c"&gt;# ignore for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ppygis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;srid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SRID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nd"&gt;@property&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;InsertValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MaxDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SurchargeDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PondingArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_ewkb&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Conduit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    This is a conduit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ArcID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;StartNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;EndNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;InletOffset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;OutletOffset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        Constructor&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArcID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ArcID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InletOffset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InletOffset&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutletOffset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OutletOffset&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArcCat_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ROUND500&amp;quot;&lt;/span&gt;    &lt;span class="c"&gt;# Profile definition created previously&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MatCat_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;CONCRETE&amp;quot;&lt;/span&gt;    &lt;span class="c"&gt;# Material created previously&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Barrels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="c"&gt;# 1 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Culvert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;            &lt;span class="c"&gt;# ignore for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kentry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kexit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                 &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kavg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                  &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Flap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;NO&amp;#39;&lt;/span&gt;               &lt;span class="c"&gt;# NO for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Q0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                    &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                  &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;           &lt;span class="c"&gt;# ignore for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StartNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StartNode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EndNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EndNode&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ppygis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LineString&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StartNode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                                          &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EndNode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt; &lt;span class="n"&gt;srid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SRID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nd"&gt;@property&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;InsertValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArcID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InletOffset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutletOffset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArcCat_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MatCat_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Barrels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Culvert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kentry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kexit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kavg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Flap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_ewkb&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;dbname=giswater_ddb user=postgres port=5431&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# Here you can put the logic that reads out the files/databases&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# that contain locations and/or attributes of your objects&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;node_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;J1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;255320.35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255347.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255365.84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255375.21&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;472276.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472302.63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472319.22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472328.19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;33.11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.89&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;arc_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;C3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# insert queries for the junctions&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;example_junction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Junction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node_ids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;junction_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;example_junction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InsertValues&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c"&gt;# and write the resulting query to a file, not stdout&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mogrify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;junction_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;junction_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;example_junction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# insert queries for the conduits&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;start_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;junction_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;end_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;junction_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;inlet_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;outlet_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;example_conduit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Conduit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc_ids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;start_node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                              &lt;span class="n"&gt;inlet_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outlet_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conduit_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;example_conduit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InsertValues&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c"&gt;# and write the resulting query to a file, not stdout&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mogrify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conduit_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conduit_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which results in the following &lt;span class="caps"&gt;SQL&lt;/span&gt;-statement with some very long&amp;nbsp;lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000&lt;/span&gt;&lt;span class="n"&gt;cdccccccc22a0f410000000051d31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000713&lt;/span&gt;&lt;span class="n"&gt;d0ad79f2b0f4152b81e85bad31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J3&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="n"&gt;eb51b82e2c0f4114ae47e1fcd31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J4&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mf"&gt;010100002040710000e17&lt;/span&gt;&lt;span class="n"&gt;a14ae792c0f41295c8fc220d41c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_conduit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arccat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matcat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;barrels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;culvert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kentry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kexit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kavg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;qmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sector_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the_geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;C1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ROUND500&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;CONCRETE&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;01020000204071000002000000&lt;/span&gt;&lt;span class="n"&gt;cdccccccc22a0f410000000051d31c41713d0ad79f2b0f4152b81e85bad31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_conduit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arccat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matcat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;barrels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;culvert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kentry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kexit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kavg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;qmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sector_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the_geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;C2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ROUND500&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;CONCRETE&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;01020000204071000002000000713&lt;/span&gt;&lt;span class="n"&gt;d0ad79f2b0f4152b81e85bad31c4185eb51b82e2c0f4114ae47e1fcd31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_conduit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arccat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matcat_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;barrels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;culvert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kentry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kexit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kavg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;qmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sector_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the_geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;C3&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ROUND500&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;CONCRETE&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;01020000204071000002000000&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="n"&gt;eb51b82e2c0f4114ae47e1fcd31c41e17a14ae792c0f41295c8fc220d41c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="conclusions"&gt;&lt;span class="caps"&gt;CONCLUSIONS&lt;/span&gt;:&lt;/h1&gt;
&lt;p&gt;Although it took a while to grasp the behavior that was going on, the use of Arc-Node topology makes sense for an urban drainage network and does a good job maintaining network integrity.
&lt;span class="caps"&gt;GISWATER&lt;/span&gt; mimics the network behavior of plain &lt;span class="caps"&gt;SWMM&lt;/span&gt; really well. The addition of directional arrows communicates that the objects form a network and provide insight in the direction of the arcs. However, without proper instruction, this may result in confusion when users are under the impression that the arrows are showing hydraulic&amp;nbsp;direction.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt; introduces a system of material definitions and profile definitions for the reaches. This approach appeals to me conceptually. However, in its current form, the profile catalog is far from user-friendly: the meaning of the input parameters is unclear for the various&amp;nbsp;shapes.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:cat_mat"&gt;
&lt;p&gt;Although there seems to be a little bug in the version of &lt;span class="caps"&gt;GISWATER&lt;/span&gt; I&amp;#8217;m running (v1,0.186), since trying to save a material resulted in the following message: &amp;#8220;The column name roughness was not found in this ResultSet&amp;#8221;. Adding records to the material definition table from &lt;span class="caps"&gt;QGIS&lt;/span&gt; worked correctly.&amp;#160;&lt;a class="footnote-backref" href="#fnref:cat_mat" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Tue, 11 Nov 2014 00:00:00 +0100</pubDate><guid>tag:pilosa.eu,2014-11-11:blog/2014/11/11/swmm-giswater-tutorial-4-creating-conduits/</guid><category>SWMM</category><category>Giswater</category><category>Water</category></item><item><title>EPA SWMM / Giswater Tutorial 5:Â Outfalls</title><link>http://pilosa.eu/blog/2014/11/11/swmm-giswater-tutorial-5-outfalls/</link><description>&lt;p&gt;This is the 5&lt;sup&gt;th&lt;/sup&gt; episode in my tutorial on using &lt;span class="caps"&gt;EPA&lt;/span&gt; Storm Water Management Model (&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;) and Giswater for rainfall-runoff modeling for an urban drainage network&amp;nbsp;system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Outfalls are terminal nodes of the drainage system used to define final downstream boundaries under Dynamic Wave flow routing. For other types of flow routing they behave as a junction. Only a single link can be connected to an outfall&amp;nbsp;node.&lt;/p&gt;
&lt;p&gt;The boundary conditions at an outfall can be described by any one of the following stage relationships: 
* the critical or normal flow depth in the connecting&amp;nbsp;conduit  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a fixed stage&amp;nbsp;elevation  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a tidal stage described in a table of tide height versus hour of the&amp;nbsp;day  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a user-defined time series of stage versus&amp;nbsp;time.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The principal input parameters for outfalls&amp;nbsp;include: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;invert&amp;nbsp;elevation  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;boundary condition type and stage&amp;nbsp;description  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;presence of a flap gate to prevent backflow through the&amp;nbsp;outfall.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Name 
 User-assigned outfall&amp;nbsp;name. &lt;/p&gt;
&lt;p&gt;X-Coordinate 
 Horizontal location of the outfall on the Study Area Map. If left blank then the outfall will not appear on the&amp;nbsp;map. &lt;/p&gt;
&lt;p&gt;Y-Coordinate 
 Vertical location of the outfall on the Study Area Map. If left blank then the outfall will not appear on the&amp;nbsp;map. &lt;/p&gt;
&lt;p&gt;Description 
 Click the ellipsis button (or press Enter) to edit an optional description of the&amp;nbsp;outfall. &lt;/p&gt;
&lt;p&gt;Tag 
 Optional label used to categorize or classify the&amp;nbsp;outfall. &lt;/p&gt;
&lt;p&gt;Inflows 
 Click the ellipsis button (or press Enter) to assign external direct, dry weather or &lt;span class="caps"&gt;RDII&lt;/span&gt; inflows to the&amp;nbsp;outfall. &lt;/p&gt;
&lt;p&gt;Treatment 
 Click the ellipsis button (or press Enter) to edit a set of treatment functions for pollutants entering the&amp;nbsp;node. &lt;/p&gt;
&lt;p&gt;Invert El. 
 Invert elevation of the outfall (feet or&amp;nbsp;meters). &lt;/p&gt;
&lt;p&gt;Tide Gate 
 &lt;span class="caps"&gt;YES&lt;/span&gt; - tide gate present to prevent backflow 
&lt;span class="caps"&gt;NO&lt;/span&gt; - no tide gate&amp;nbsp;present &lt;/p&gt;
&lt;p&gt;Type 
 Type of outfall boundary condition: 
&lt;span class="caps"&gt;FREE&lt;/span&gt;: outfall stage determined by minimum of critical flow depth and normal flow depth in the connecting conduit 
&lt;span class="caps"&gt;NORMAL&lt;/span&gt;: outfall stage based on normal flow depth in the connecting conduit 
&lt;span class="caps"&gt;FIXED&lt;/span&gt;: outfall stage set to a fixed value 
&lt;span class="caps"&gt;TIDAL&lt;/span&gt;: outfall stage given by a table of tide elevation versus time of day 
&lt;span class="caps"&gt;TIMESERIES&lt;/span&gt;: outfall stage supplied from a time series of&amp;nbsp;elevations &lt;/p&gt;
&lt;p&gt;Fixed Stage 
 Water elevation for a &lt;span class="caps"&gt;FIXED&lt;/span&gt; type of outfall (feet or&amp;nbsp;meters). &lt;/p&gt;
&lt;p&gt;Tidal Curve Name 
 Name of the Tidal Curve relating water elevation to hour of the day for a &lt;span class="caps"&gt;TIDAL&lt;/span&gt; outfall (double-click to edit the&amp;nbsp;curve). &lt;/p&gt;
&lt;p&gt;Time Series Name 
 Name of time series containing time history of outfall stage for a &lt;span class="caps"&gt;TIMESERIES&lt;/span&gt; outfall (double-click to edit the&amp;nbsp;series). &lt;/p&gt;
&lt;p&gt;Only thing required before running the model is possible is to create an&amp;nbsp;outfall.&lt;/p&gt;
&lt;p&gt;Create outfall
Run &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; (not that the results make any sense without&amp;nbsp;inflows)&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;: run not&amp;nbsp;possilbe&lt;/p&gt;
&lt;h1 id="conclusions"&gt;&lt;span class="caps"&gt;CONCLUSIONS&lt;/span&gt;:&lt;/h1&gt;
&lt;p&gt;Convert - absent in &lt;span class="caps"&gt;GISWATER&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Sectors are relevant&amp;nbsp;:)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Tue, 11 Nov 2014 00:00:00 +0100</pubDate><guid>tag:pilosa.eu,2014-11-11:blog/2014/11/11/swmm-giswater-tutorial-5-outfalls/</guid><category>SWMM</category><category>Giswater</category><category>Water</category></item><item><title>EPA SWMM / Giswater Tutorial 3: CreatingÂ Junctions</title><link>http://pilosa.eu/blog/2014/10/09/swmm-giswater-tutorial-3-creating-junctions/</link><description>&lt;p&gt;This is the 3&lt;sup&gt;rd&lt;/sup&gt; episode in my tutorial on using &lt;span class="caps"&gt;EPA&lt;/span&gt; Storm Water Management Model (&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;) and Giswater for rainfall-runoff modeling for an urban drainage network system. This episode describes how to create junctions in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;, using &lt;span class="caps"&gt;QGIS&lt;/span&gt; and using &lt;span class="caps"&gt;SQL&lt;/span&gt; insert&amp;nbsp;statements. &lt;/p&gt;
&lt;p&gt;The wonderful &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; help provides us with the following information on&amp;nbsp;junctions:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Junctions are drainage system nodes where links join together.
  Physically they can represent the confluence of natural surface channels,
  manholes in a sewer system, or pipe connection fittings.
  External inflows can enter the system at junctions.
  Excess water at a junction can become partially pressurized while
  connecting conduits are surcharged and can either be lost from the system
  or be allowed to pond atop the junction and subsequently drain back into the&amp;nbsp;junction.&lt;/p&gt;
&lt;p&gt;The principal input parameters for a junction&amp;nbsp;are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;invert&amp;nbsp;elevation;&lt;/li&gt;
&lt;li&gt;height to ground surface: maximum depth at the junction (i.e., the distance from the invert to the ground surface) (feet or meters). If zero, then the distance from the invert to the top of the highest connecting link will be&amp;nbsp;used;&lt;/li&gt;
&lt;li&gt;ponded surface area when flooded&amp;nbsp;(optional);&lt;/li&gt;
&lt;li&gt;external inflow data&amp;nbsp;(optional).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;For now, we keep it as simple as possible and leave the two optional attributes for later. However, there are some other attributes that may seem trivial, yet still require&amp;nbsp;attention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometry;&lt;/li&gt;
&lt;li&gt;X-coordinate;&lt;/li&gt;
&lt;li&gt;Y-coordinate;&lt;/li&gt;
&lt;li&gt;NodeID.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="epa-swmm"&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The graphical user interface of &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; provides two ways to create a new&amp;nbsp;node:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is possible to draw a new node on the map, in which case the location where you click the map is used to determine the X- and&amp;nbsp;Y-coordinate;&lt;/li&gt;
&lt;li&gt;The other way around is to navigate to junctions in the tree view in the tree view, select &amp;#8220;junctions&amp;#8221; by using the left mouse button, followed by pressing the &amp;#8220;Add new&amp;#8221; button. Using this approach, the location on the map where the junction is placed is determined based on the values supplied for the X- and&amp;nbsp;Y-coordinate.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="SWMM_create_junction" src="/images/SWMM_create_junction.png" title="Creating a junction in EPA SWMM." /&gt;&lt;/p&gt;
&lt;p&gt;In both cases, a NodeID is automatically generated using an autoincrementor, with the prefixes and increment supplied in the project defaults (see &lt;a href="/blog/2014/09/20/swmm-giswater-tutorial-2-project-setup/"&gt;Episode 2: Project Setup&lt;/a&gt;).
It is possible to replace this automatically generated NodeID with your own value, yet each node should have an unique &lt;span class="caps"&gt;ID&lt;/span&gt;. This constrained is enforced by the&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Double-clicking on a node opens it&amp;#8217;s attribute form in which the attributes can be modified.
The location of a junction can be changed by dragging the junction to a new location, or by changing the X- and Y-attributes. A selected node can be removed by pressing the &amp;#8220;Delete&amp;#8221; key on your keyboard, or by using the &amp;#8220;Delete object&amp;#8221; button next to the &amp;#8220;Add new&amp;#8221;&amp;nbsp;button.&lt;/p&gt;
&lt;h1 id="giswater-qgis-as-frontdoor"&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;: &lt;span class="caps"&gt;QGIS&lt;/span&gt; &lt;span class="caps"&gt;AS&lt;/span&gt; &lt;span class="caps"&gt;FRONTDOOR&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The Giswater equivalent of drawing a junction in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; directly, would be to draw a new feature in in the junction layer of the corresponding &lt;span class="caps"&gt;GIS&lt;/span&gt;-project. This approach offers the following&amp;nbsp;advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding basemaps;&lt;sup id="fnref:backdrop_image"&gt;&lt;a class="footnote-ref" href="#fn:backdrop_image" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Adding your own geo-spatial data as a reference, to snap new objects on or to copy-paste the geometry into the &lt;span class="caps"&gt;SWMM&lt;/span&gt;&amp;nbsp;layers;&lt;/li&gt;
&lt;li&gt;Sophisticated drawing tools (cadtools, Autotrace, &lt;span class="caps"&gt;GPS&lt;/span&gt;) availabe as&amp;nbsp;plugins;&lt;/li&gt;
&lt;li&gt;A field calculator to update attributes in&amp;nbsp;bulk.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sectors"&gt;Sectors&lt;/h3&gt;
&lt;p&gt;Giswater introduces the concept of sectors. I haven&amp;#8217;t found out yet whether using sectors in your data is required or not. I&amp;#8217;ll ignore them for now and come back to this either when I&amp;#8217;ll make an episode on the functioning of sectors or when the calculation refuses to run &lt;i class="fa fa-smile-o"&gt;&lt;/i&gt;.&lt;/p&gt;
&lt;h3 id="drawing-new-junctions"&gt;Drawing new&amp;nbsp;junctions&lt;/h3&gt;
&lt;p&gt;&lt;img alt="QGIS_create_junctions" src="/images/QGIS_create_junctions.png" title="Creating junctions in QGIS." /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make the Junctions layer (&lt;strong&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; &lt;span class="caps"&gt;DATA&lt;/span&gt;&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Hydraulics&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Node&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Junctions&lt;/strong&gt; ) active by clicking on this layer in the content tree of the&amp;nbsp;map;&lt;/li&gt;
&lt;li&gt;Toggle editing (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Add new features (&lt;strong&gt;b&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;In the attribute form, supply values for node_id, top_elev, ymax and optionally for the other attributes (&lt;strong&gt;c&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Save layer edits (&lt;strong&gt;d&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="copy-paste-new-junctions"&gt;Copy - Paste new&amp;nbsp;junctions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make the source layer for the junctions to be pasted&amp;nbsp;active;&lt;/li&gt;
&lt;li&gt;Toggle editing of this layer (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Select the features to be copied using the selection tools provided by &lt;span class="caps"&gt;QGIS&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;Click &amp;#8220;Copy features&amp;#8221; button (&lt;strong&gt;e&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Make the Junctions layer&amp;nbsp;active;&lt;/li&gt;
&lt;li&gt;Toggle editing (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Paste features (&lt;strong&gt;f&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;If attributes with the same name were present in the source layer, they will be transferred over. Otherwise, supply values for node_id, top_elev, ymax and optionally for the other attributes (&lt;strong&gt;c&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Save layer edits (&lt;strong&gt;d&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="modify-the-location-of-a-junction"&gt;Modify the location of a&amp;nbsp;junction&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make the Junctions layer&amp;nbsp;active;&lt;/li&gt;
&lt;li&gt;Toggle editing (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Move features (&lt;strong&gt;g&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Drag junction to new&amp;nbsp;location;&lt;/li&gt;
&lt;li&gt;Save layer edits (&lt;strong&gt;d&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="modify-the-attributes-of-a-junction"&gt;Modify the attributes of a&amp;nbsp;junction&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make the Junctions layer&amp;nbsp;active;&lt;/li&gt;
&lt;li&gt;Toggle editing (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Open the attribute form using the &amp;#8220;Identify Features&amp;#8221; button (&lt;strong&gt;i&lt;/strong&gt;) or open the attribute table (&lt;strong&gt;j&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Fill in the new attribute values (&lt;strong&gt;c&lt;/strong&gt;);    &lt;/li&gt;
&lt;li&gt;Save layer edits (&lt;strong&gt;d&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="delete-a-junction"&gt;Delete a&amp;nbsp;junction&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make the Junctions layer&amp;nbsp;active;&lt;/li&gt;
&lt;li&gt;Toggle editing (&lt;strong&gt;a&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Select&amp;nbsp;features;&lt;/li&gt;
&lt;li&gt;Delete selected using the &amp;#8220;Delete selected&amp;#8221; button (&lt;strong&gt;h&lt;/strong&gt;) or pressing the &amp;#8220;Delete&amp;#8221;&amp;nbsp;key;&lt;/li&gt;
&lt;li&gt;Save layer edits (&lt;strong&gt;d&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="important-donts"&gt;Important &lt;span class="caps"&gt;DON&lt;/span&gt;&amp;#8217;Ts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Do &lt;strong&gt;&lt;em&gt;&lt;span class="caps"&gt;NOT&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt; mess around in the nodes layer or in the results layers!!! Drawing in these layers will not activate the required database functions to create new objects&amp;nbsp;correctly.&lt;/li&gt;
&lt;li&gt;Make sure your Postgres server is running when starting the &lt;span class="caps"&gt;QGIS&lt;/span&gt; project (i.e. do not close the command prompt window of the portable Postgres). If the server stops with your &lt;span class="caps"&gt;GIS&lt;/span&gt;-project open, &lt;span class="caps"&gt;QGIS&lt;/span&gt; will spit out a endless loop of pop-ups stating that it is not able to reach the server. &lt;span class="caps"&gt;QGIS&lt;/span&gt; can now only be stopped with&amp;nbsp;violence.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="giswater-sql-as-backdoor"&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;: &lt;span class="caps"&gt;SQL&lt;/span&gt; &lt;span class="caps"&gt;AS&lt;/span&gt; &lt;span class="caps"&gt;BACKDOOR&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;When you are drawing a drainage system from scratch, &lt;span class="caps"&gt;QGIS&lt;/span&gt; (or other &lt;span class="caps"&gt;GIS&lt;/span&gt; software configured for editing the correct tables) would be the way to go. However, in many cases information is already available from other sources (&lt;span class="caps"&gt;CAD&lt;/span&gt;-drawings, geodatabases, Excel-files, etc.). In these cases, you could also use scripting to interpret this information and insert it into the database. These insert queries could directly be executed from your code, yet I like to keep insight in what is happening. Therefore, my approach was to use python scripts which write the insert queries to a &lt;span class="caps"&gt;SQL&lt;/span&gt;-script. &lt;/p&gt;
&lt;p&gt;If X- and Y-coordinates are available, the value to be inserted in the geometry field can be generated using &lt;a href="http://www.fabianowski.eu/projects/ppygis/"&gt;PPyGIS&lt;/a&gt;. Although in the documentation is stated that PPyGIS is young and has several limitations, it does this job really well. The following python code generates insert statements for 4 junctions in a strictly random street somewhere in the east of the&amp;nbsp;Netherlands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ppygis&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;psycopg2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;SRID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;28992&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tutorial&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;v_inp_edit_junction&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;(node_id, top_elev, ymax, y0, ysur, apond, sector_id, the_geom)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;junction_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;r&amp;#39;INSERT INTO &amp;quot;{0}&amp;quot;.&amp;quot;{1}&amp;quot; {2} VALUES (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;);&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_fields&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;junction&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    This is a junction&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        Constructor&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MaxDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;           &lt;span class="c"&gt;# take values from connected reaches&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;          &lt;span class="c"&gt;# 0 for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SurchargeDepth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="c"&gt;# optional, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PondingArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="c"&gt;# optional, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;        &lt;span class="c"&gt;# ignore for now, to be examined later&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ppygis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;srid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SRID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nd"&gt;@property&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;InsertValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MaxDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SurchargeDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PondingArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SectorID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Geometry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_ewkb&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;dbname=giswater_ddb user=postgres port=5431&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# Here you can put the logic that reads out the files/databases&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;# that contain locations and/or attributes of your junctions&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;node_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;J1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;J4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;255320.35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255347.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255365.84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;255375.21&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;472276.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472302.63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472319.22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;472328.19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;33.11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.89&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;example_junction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;junction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node_ids&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;junction_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;example_junction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InsertValues&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c"&gt;# and write the resulting query to a file, not stdout&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mogrify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;junction_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;junction_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which results in the following &lt;span class="caps"&gt;SQL&lt;/span&gt;-statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000&lt;/span&gt;&lt;span class="n"&gt;cdccccccc22a0f410000000051d31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;33.03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000713&lt;/span&gt;&lt;span class="n"&gt;d0ad79f2b0f4152b81e85bad31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J3&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mo"&gt;010100002040710000&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="n"&gt;eb51b82e2c0f4114ae47e1fcd31c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tutorial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v_inp_edit_junction&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;J4&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mf"&gt;010100002040710000e17&lt;/span&gt;&lt;span class="n"&gt;a14ae792c0f41295c8fc220d41c41&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, this insert query should also executed on the view that contains the junctions, not directly on the node table. Update and delete queries should also be performed on this&amp;nbsp;view.&lt;/p&gt;
&lt;h1 id="conclusions"&gt;&lt;span class="caps"&gt;CONCLUSIONS&lt;/span&gt;:&lt;/h1&gt;
&lt;p&gt;&lt;span class="caps"&gt;QGIS&lt;/span&gt; provides much more powerful tools to draw and modify your objects than using &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; directly. 
No incremental IDs are handed out automatically, yet the field calculator provides a powerful tool ot generate them in bulk. Data integrity is maintained by the database trigger and constraints. This works works well, however you need to be &lt;strong&gt;&lt;em&gt;really&lt;/em&gt;&lt;/strong&gt; careful to make your edits to the correct&amp;nbsp;layer.&lt;/p&gt;
&lt;h3 id="open-ends"&gt;Open&amp;nbsp;ends:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The description and &lt;span class="caps"&gt;TAG&lt;/span&gt; attributes of the junctions are not present in Giswater. Within a &lt;span class="caps"&gt;GIS&lt;/span&gt;-environment, there is less need for this functionality. However including the description attribute would be a minor development effort. Supporting the use of tags might need more&amp;nbsp;effort;&lt;/li&gt;
&lt;li&gt;Giswater introduces the concepts of sectors. It is not yet clear to me what their function is and whether it is required to use&amp;nbsp;them;&lt;/li&gt;
&lt;li&gt;The initial depth does not seem to be explicitly mentioned in the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; help. This attribute will need to be examined&amp;nbsp;further.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:backdrop_image"&gt;
&lt;p&gt;It is possible to add a street map, utility map, topographic map, site development plan, or any other relevant picture or drawing as a backdrop image in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;.This can be useful, yet &amp;#8230; to a proper &lt;span class="caps"&gt;GIS&lt;/span&gt;-environment.&amp;#160;&lt;a class="footnote-backref" href="#fnref:backdrop_image" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Thu, 09 Oct 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-10-09:blog/2014/10/09/swmm-giswater-tutorial-3-creating-junctions/</guid><category>SWMM</category><category>Giswater</category><category>Water</category></item><item><title>EPA SWMM / Giswater Tutorial 2: ProjectÂ Setup</title><link>http://pilosa.eu/blog/2014/09/20/swmm-giswater-tutorial-2-project-setup/</link><description>&lt;p&gt;This is the 2&lt;sup&gt;nd&lt;/sup&gt;  episode in my tutorial on using &lt;span class="caps"&gt;EPA&lt;/span&gt; Storm Water Management Model (&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;) and Giswater for rainfall-runoff modeling for an urban drainage network system. This episode describes how to create new project in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;, how to create a project using Giswater and the initial options that need to be set before we can start creating our&amp;nbsp;network. &lt;/p&gt;
&lt;h1 id="epa-swwm"&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWWM&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Starting a new project in &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; is a simple as starting up the program. A new project is opened and you can directly start drawing a sewer network. A project can be saved as a &lt;span class="caps"&gt;SWMM&lt;/span&gt;-input file (&lt;strong&gt;&lt;span class="caps"&gt;INP&lt;/span&gt;-file&lt;/strong&gt;). Such an input-file contains both all objects in a project&amp;#8217;s network and all options set by the user. Since a standard set of default values is provided, we could start drawing the network without further preparation. Most options deal with the look-and-feel of the program and the simulation parameters. For these options, we will keep the default values for now. Some options however do affect the drawing of the network and will need to be set&amp;nbsp;beforehand:&lt;/p&gt;
&lt;p&gt;&lt;img alt="SWMM_Defaults" src="/images/SWMM_defaults.png" title="Default prefixes for EPA SWMM objects." /&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Specify whether the automatic computation of conduit lengths and subcatchment areas is turned on or&amp;nbsp;off.&lt;/li&gt;
&lt;li&gt;Choose whether the positions of links above the invert of their connecting nodes are expressed as a Depth above the node invert or as the Elevation of the&amp;nbsp;offset.&lt;/li&gt;
&lt;li&gt;Select flow units that makes sense (i.e. change the default Cubic Feet per Second to Cubic Metres per Second).
&lt;li&gt;Change the map dimensions and extent to appropriate values (available from the menu: &lt;strong&gt;View &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; Dimensions&lt;/strong&gt;).
&lt;li&gt;On the &lt;span class="caps"&gt;ID&lt;/span&gt; Labels page of the defaults menu (&lt;strong&gt;Project &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; Defaults&lt;/strong&gt;), set the &lt;span class="caps"&gt;ID&lt;/span&gt; Prefixes as follows (leave the others blank):
&lt;ul&gt;
&lt;li&gt;Rain Gages: &lt;strong&gt;Gage&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Subcatchments: &lt;strong&gt;S&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Junctions: &lt;strong&gt;J&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Outfalls:  &lt;strong&gt;Out&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Conduits: &lt;strong&gt;C&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;ID&lt;/span&gt; Increment: &lt;strong&gt;1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This will make &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; automatically label new objects with consecutive numbers following the  designated&amp;nbsp;prefix.&lt;/p&gt;
&lt;h1 id="giswater"&gt;&lt;span class="caps"&gt;GISWATER&lt;/span&gt;&lt;/h1&gt;
&lt;h3 id="software-configuration"&gt;Software&amp;nbsp;configuration&lt;/h3&gt;
&lt;p&gt;The software configuration window can be opened from the menu (&lt;strong&gt;Configuration&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Software configuration&lt;/strong&gt;). The options that can be set here determine how Giswater deals with inputfiles, outputfiles and the database. For these options, we keep the default values. If you would use your own database, this is the place where you can set up the location of the database administration program (&lt;span class="caps"&gt;PGADMIN3&lt;/span&gt;).&lt;/p&gt;
&lt;h3 id="database-connection"&gt;Database&amp;nbsp;connection&lt;/h3&gt;
&lt;p&gt;The software configuration window can be opened from the menu (&lt;strong&gt;Configuration&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;Database configuration&lt;/strong&gt;). If I remember correctly, this was all working correctly without alterations for the included portable postgis database. If you would use your own database, this is the place where you can set up the&amp;nbsp;connection.&lt;/p&gt;
&lt;h3 id="creating-a-epa-swmm-project"&gt;Creating a &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;&amp;nbsp;project&lt;/h3&gt;
&lt;p&gt;The easiest way to start a project in Giswater is to load the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; &lt;span class="caps"&gt;DB&lt;/span&gt; Sample project.
The corresponding option in the project menu loads a sample project into the db using the sql files in the installation directory. You can do this an play around for a while. The goal for this episode in my tutorial is to create an empty project, so we&amp;#8217;ll take a different&amp;nbsp;track:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; window (&lt;strong&gt;Software&lt;/strong&gt; &lt;i class="fa fa-long-arrow-right"&gt;&lt;/i&gt; &lt;strong&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;&lt;/strong&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Giswater_EPA_SWMM" src="/images/Giswater_EPA_SWMM.png" title="Giswater EPA SWMM window." /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a project and supply the following characteristics:&lt;ul&gt;
&lt;li&gt;Name of the&amp;nbsp;project&lt;/li&gt;
&lt;li&gt;Title of the&amp;nbsp;project&lt;/li&gt;
&lt;li&gt;Author of the&amp;nbsp;project&lt;/li&gt;
&lt;li&gt;Date&amp;nbsp;create&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;SRID&lt;/span&gt; of the coordinate system to be&amp;nbsp;used&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Giswater_create_project" src="/images/Giswater_create_project.png" title="Giswater create project window." /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pressing the options button would open en windows in which we can set a broad array of options. A few of the affect  our system have sensible defaults Options: sensible defaults, so we keep them as&amp;nbsp;is.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="creating-a-gis-project"&gt;Creating a &lt;span class="caps"&gt;GIS&lt;/span&gt;-project&lt;/h3&gt;
&lt;p&gt;After we created the project, all necessary tables are present so theoretically we could start filling these tables with information about our system. However, these tables are not yet easy accessible for the &lt;span class="caps"&gt;GIS&lt;/span&gt; superpowers yet. In order to facilitate this, Giswater contains a function to create a &lt;span class="caps"&gt;GIS&lt;/span&gt;-project that can be opened and modified using &lt;span class="caps"&gt;QGIS&lt;/span&gt;. During this process, a &lt;span class="caps"&gt;QGIS&lt;/span&gt;-project is created with the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; data (i.e. the objects in the system and input tables) and simulation analysis in its table of&amp;nbsp;contents. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Giswater_create_gisproject" src="/images/Giswater_create_gisproject.png" title="Giswater create GIS-project window." /&gt;&lt;/p&gt;
&lt;p&gt;Now I could should you our tutorial project in &lt;span class="caps"&gt;QGIS&lt;/span&gt;, yet that would look somewhat empty in it&amp;#8217;s current state. Therefore I&amp;#8217;ll provide a screenshot of the &lt;span class="caps"&gt;GIS&lt;/span&gt;-project created based on the sample&amp;nbsp;project:&lt;/p&gt;
&lt;p&gt;&lt;img alt="QGIS_sample_epaswmm" src="/images/QGIS_sample_epaswmm.png" title="Sample EPA SWMM project in QGIS." /&gt;&lt;/p&gt;
&lt;h1 id="conclusions"&gt;&lt;span class="caps"&gt;CONCLUSIONS&lt;/span&gt;:&lt;/h1&gt;
&lt;p&gt;Starting a new project in Giswater is a little more work than in vanilla &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;. This amount of work however is still very small. Creating a &lt;span class="caps"&gt;GIS&lt;/span&gt;-project is trivial and gives us the opportunity to visualize and edit our system in a proper &lt;span class="caps"&gt;GIS&lt;/span&gt;-environment with the possibility to add our own data. background maps, web services etc.&amp;nbsp;etc.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Sat, 20 Sep 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-09-20:blog/2014/09/20/swmm-giswater-tutorial-2-project-setup/</guid><category>SWMM</category><category>Giswater</category><category>Water</category></item><item><title>EPA SWMM / Giswater Tutorial 1:Â Installation</title><link>http://pilosa.eu/blog/2014/09/10/swmm-giswater-tutorial-1-installation/</link><description>&lt;p&gt;This is the 1&lt;sup&gt;st&lt;/sup&gt; episode in my tutorial on using &lt;span class="caps"&gt;EPA&lt;/span&gt; Storm Water Management Model (&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;) and Giswater for rainfall-runoff modeling for an urban drainage network system. This episode describes the installation&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;The instructions in the &lt;a href="http://www.giswater.org/print/book/export/html/17"&gt;Giswater documentation&lt;/a&gt; provided sufficient information for installing this software. To install you must download the installer package and execute it. Remember you can choose the &lt;a href="http://download.giswater.org/giswater_stand-alone.exe"&gt;Giswater stand-alone install package&lt;/a&gt; or the &lt;a href="http://download.giswater.org/giswater_all-in-one.exe"&gt;all-in-one install package&lt;/a&gt;. The all-in-one installer package is designed with a portable version of PostgreSQL+PostGIS 2.1. Remember you need to have installed an updated Java Runtime Environment (&lt;span class="caps"&gt;JRE&lt;/span&gt;) on your&amp;nbsp;computer.&lt;/p&gt;
&lt;p&gt;I took the easy road and used the all-in-one installer. Installation using the installation wizard proved to be straight-forward. When the dust had settled, the following had taken&amp;nbsp;place:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Giswater had been placed in it&amp;#8217;s standard installation path (&lt;strong&gt;C:\Program Files\Giswater\&lt;/strong&gt;, so apparently it&amp;#8217;s a 64-bit application) with the following sub-folders:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;epa&lt;/strong&gt; - &lt;span class="caps"&gt;EPANET&lt;/span&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; command line&amp;nbsp;executables;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gis&lt;/strong&gt; - templates for gisproject&amp;nbsp;export(?);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;images&lt;/strong&gt; - images used in the Giswater graphical user&amp;nbsp;interface;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inp&lt;/strong&gt; - sqlite-databases used in the information exchange between the database and the input / output files of the simulation tools &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; templates for these&amp;nbsp;files;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;legal&lt;/strong&gt; - &lt;span class="caps"&gt;GPL&lt;/span&gt; v3&amp;nbsp;license;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lib&lt;/strong&gt; - java libraries used by the Giswater&amp;nbsp;application;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;samples&lt;/strong&gt; - &lt;span class="caps"&gt;SQL&lt;/span&gt;-scripts containing data for sample&amp;nbsp;projects;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sql&lt;/strong&gt; - &lt;span class="caps"&gt;SQL&lt;/span&gt;-scripts containing database&amp;nbsp;logic.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some additional folders had been placed in &lt;strong&gt;C:\Users\&amp;lt;username&amp;gt;\Giswater\&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; - some general configuration&amp;nbsp;files;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log&lt;/strong&gt; - logging directory for giswater&amp;nbsp;application;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;portable&lt;/strong&gt; - portable installation of postgresql + postgis +&amp;nbsp;pgadmin3.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="epa-swwm"&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWWM&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Since one of my objectives is to make a comparison between using &lt;span class="caps"&gt;SWMM&lt;/span&gt; toghether with Giswater and a vanilla &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; setup, I also need to have &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; 5.0.022 installed (the only version supported by Giswater). However, this version is not available anymore from the &lt;a href="http://www2.epa.gov/water-research/storm-water-management-model-swmm"&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; website&lt;/a&gt;. After about 3 years of sleep, the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; model is actively developed again. Usually this is good news, but when other products depend on older versions that have been taken offline, it is bad news as&amp;nbsp;well&amp;#8230;&lt;/p&gt;
&lt;p&gt;For this tutorial, it won&amp;#8217;t be a problem, since I already had version 5.0.022 installed on my computer. Yet, there is a bigger issue here: a lot of functionality with regard to the visualization of the simulation results (charts, profiles, animations, etc.) is not possible without the &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; graphical user interface. Following could be done to make this functionality also available to Giswater users (in order of personal&amp;nbsp;preference):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Giswater developers keep their software compatible with the most recent version of &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;EPA&lt;/span&gt; also makes version 5.0.022 available for download, since this has been the stable version for almost 3&amp;nbsp;years;&lt;/li&gt;
&lt;li&gt;Giswater developers also supply a download for the full version of &lt;span class="caps"&gt;EPA&lt;/span&gt; &lt;span class="caps"&gt;SWMM&lt;/span&gt; 5.0.022, not just the command line&amp;nbsp;version.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let&amp;#8217;s hope one of the parties involved reads this and takes action to solve this issue &lt;i class="fa fa-smile-o"&gt;&lt;/i&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Wed, 10 Sep 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-09-10:blog/2014/09/10/swmm-giswater-tutorial-1-installation/</guid><category>SWMM</category><category>Giswater</category><category>Water</category></item><item><title>WhyÂ Pilosa?</title><link>http://pilosa.eu/blog/2014/09/02/why-pilosa/</link><description>&lt;blockquote&gt;
&lt;p&gt;I reject holism. I challenge you to tell me, for instance, how a holistic
description of an ant colony sheds any more light on it than is shed by a
description of the ants inside it, and their roles, and their interrelationships.
Any holistic explanation of an ant colony will inevitably fall far short of
explaining where the consciousness experienced by an ant colony arises from.
&lt;cite&gt;Dr. Anteater in &amp;#8220;Ant Fugue&amp;#8221;, part of  &amp;#8220;GÃ¶del, Escher, Bach: An Eternal Golden Braid&amp;#8221; by Douglas R. Hofstadter&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Itâs humans that are the most curious animal on the&amp;nbsp;planet.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="/images/tamandua.png" alt="Tamandua" title="Wise and curious anteater" /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;
    &lt;table&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;T&lt;/b&gt;ool for&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;A&lt;/b&gt;llocation&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;M&lt;/b&gt;anagement&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;u&lt;/td&gt;&lt;td&gt;&lt;b&gt;N&lt;/b&gt;der &lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;D&lt;/b&gt;ecentralization&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;U&lt;/b&gt;sing&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;A&lt;/b&gt;gents&lt;/td&gt;&lt;/tr&gt;
    &lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;This thesis addresses the interdependencies between water use and water
 availability and describes a model that has been developed to increase
 insight in the potential effects of different decentralization regimes
 in water allocation management with regard to the spatial and temporal
 distribution of water availability and agricultural water use in a
 semi-arid river&amp;nbsp;basin.&lt;/p&gt;
&lt;p&gt;Relevant processes include physical processes such as hydrological processes,
 water user responses to variations and changes in water availability and social processes
 between water users and water&amp;nbsp;managers.&lt;/p&gt;
&lt;p&gt;The results are relevant for research on relevant initial condition,
 context factors and design principles for participative river basin management.
 Water demand, water allocation management and water availability are strongly
 related in semi-arid environments, where the irrigation sector is responsible
 for a large part of consumptive water use. Variations in water abstractions
 for irrigation depend on irrigated area and irrigation requirements per&amp;nbsp;hectare.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All Tamanduas share a fascination for ants: the usual Tamandua (meaning
&amp;#8220;anteater&amp;#8221; in both Tupi and Portuguese) tends to see them as a tasty
snack. This Tamandua however, uses ants - a common metaphor for
agents - to analyze a complex system. When observing natural ant
colonies it can easily be seen that the complexity of each single ant is
rather low. Nonetheless ant colonies exhibit complex behavior and have
even been able to demonstrate the ability to solve geometric problems.
Water allocation management in a river catchment is another example
of such a complex system: relatively simple actions and decisions of
autonomous stakeholders can lead to complex water scarcity patterns.
Tamandua aims to increase insight in what is going on in the &amp;#8220;ant colony
of water&amp;nbsp;allocation&amp;#8221;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="why-this-name"&gt;Why this&amp;nbsp;name?&lt;/h2&gt;
&lt;p&gt;Plan was to use tamandua:
a name I came up with for .. model developed during my graduation &amp;#8230; fond of ever&amp;nbsp;since.&lt;/p&gt;
&lt;p&gt;Dr&amp;nbsp;anteater&lt;/p&gt;
&lt;p&gt;Tamandua + meanying +&amp;nbsp;image&lt;/p&gt;
&lt;p&gt;However: domains already taken
One step up: pilosa = &amp;#8230;&amp;nbsp;Sloths&lt;/p&gt;
&lt;p&gt;Xenartha
Doodles  .. armadillo-like creature + image&amp;nbsp;Many&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Tue, 02 Sep 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-09-02:blog/2014/09/02/why-pilosa/</guid><category>PYTHON</category><category>BLOG</category></item><item><title>WhyÂ Pelican?</title><link>http://pilosa.eu/blog/2014/09/01/why-pelican/</link><description>&lt;p&gt;The idea of a personal website and blog had been floating around in my 
head for a long long time. Most of this time, I expected the result
to be powered by &lt;a href="https://www.djangoproject.com/" title="Django"&gt;Django&lt;/a&gt; /
&lt;a href="http://mezzanine.jupo.org/" title="Mezzanine"&gt;Mezzanine&lt;/a&gt;.
Some weeks ago, I finally got to work and set things into motion. The result 
however was not really satisfying. All functionality was there and 
the looks kept making me happy, yet the approach felt like overkill
for my simple&amp;nbsp;needs.&lt;/p&gt;
&lt;p&gt;Some internet research for alternatives opened up
a whole world of static site generators that seemed much 
more appropriate for a site like this. Among these, I&amp;#8217;ve chosen
&lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt; for the following&amp;nbsp;reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it is written in familiar language (python) and uses a familiar template system&amp;nbsp;(jinja2);&lt;/li&gt;
&lt;li&gt;it&amp;#8217;s extensive collection of themes and&amp;nbsp;plugins;&lt;/li&gt;
&lt;li&gt;the documentation is elaborate and many fellow bloggers have written helpful posts
 on how to use and customize&amp;nbsp;Pelican;&lt;/li&gt;
&lt;li&gt;pelicans are awesome!&lt;sup id="fnref:staticgenerators"&gt;&lt;a class="footnote-ref" href="#fn:staticgenerators" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="awesome pelican" src="/images/pelican.jpg" title="Awesome pelican" /&gt; 
&lt;cite&gt;By &lt;a href="http://carolinabirds.org/" title="DickDaniels"&gt;DickDaniels&lt;/a&gt; (Own work), &lt;a href="http://creativecommons.org/licenses/by-sa/3.0" title="CC-BY-SA-3.0"&gt;&lt;span class="caps"&gt;CC&lt;/span&gt;-&lt;span class="caps"&gt;BY&lt;/span&gt;-&lt;span class="caps"&gt;SA&lt;/span&gt;-3.0&lt;/a&gt; or &lt;a href="http://www.gnu.org/copyleft/fdl.html" title="GFDL"&gt;&lt;span class="caps"&gt;GFDL&lt;/span&gt;&lt;/a&gt;, via Wikimedia Commons&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
The only big con of this approach is the need to use a 3rd party service for comments.&lt;sup id="fnref:staticcomments"&gt;&lt;a class="footnote-ref" href="#fn:staticcomments" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;
The most widely used comment hosting service is Disqus, which I implemented here as well since it&amp;#8217;s
omnipresence suggest they must do something right. After&amp;nbsp;all:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fifty million Frenchmen can&amp;#8217;t be&amp;nbsp;wrong&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;None-the-less using a service that I have blocked by Ghostery during most of my
browsing time feels somewhat wrong, so this might change in the&amp;nbsp;future.&lt;/p&gt;
&lt;h2 id="why-this-theme"&gt;Why this&amp;nbsp;theme?&lt;/h2&gt;
&lt;p&gt;The theme I created for Mezzanine consisted of a dark color scheme
with a dynamically generated fractal background.
After moving to Pelican, I looked at the available themes to see which 
of these would form the best starting point to re-create this look.
However, when I encountered the pure theme, this theme seemed to be 
almost good enough without further modification. 
The only drawback was a severe shortage of bananas, but that was easy
enough to solve. Bananas improve&amp;nbsp;everything.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:staticgenerators"&gt;
&lt;p&gt;Well-chosen names seem to be common among static site generators: 
&lt;a href="http://getnikola.com/"&gt;Nikola Tesla&lt;/a&gt; and &lt;a href="http://octopress.org/"&gt;Octopuses&lt;/a&gt;
 are awesome as well!&amp;#160;&lt;a class="footnote-backref" href="#fnref:staticgenerators" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:staticcomments"&gt;
&lt;p&gt;Alternatives do exist like using the
 &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/pelican_comment_system"&gt;Pelican comment system&lt;/a&gt;
 plugin or hosting your own comment service using
 &lt;a href="http://posativ.org/isso/"&gt;Isso&lt;/a&gt;, yet would take some of the simplicity of a static site generator approach away.&amp;#160;&lt;a class="footnote-backref" href="#fnref:staticcomments" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Mon, 01 Sep 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-09-01:blog/2014/09/01/why-pelican/</guid><category>PYTHON</category><category>BLOG</category></item><item><title>HelloÂ World</title><link>http://pilosa.eu/blog/2014/08/28/hello-world/</link><description>&lt;p&gt;Welcome&lt;/p&gt;
&lt;p&gt;Who am&amp;nbsp;I?&lt;/p&gt;
&lt;p&gt;Why a&amp;nbsp;blog?&lt;/p&gt;
&lt;p&gt;What to expect&amp;nbsp;here?&lt;/p&gt;
&lt;p&gt;practical excercise
naslagwerk, zowel voor mijzelf als voor&amp;nbsp;anderen&lt;/p&gt;
&lt;p&gt;Both professional  and .. projects, valuable addition to&amp;nbsp;documentation&lt;/p&gt;
&lt;p&gt;Check out the posts and leave a comment if you feel like&amp;nbsp;it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwin Sterrenburg</dc:creator><pubDate>Thu, 28 Aug 2014 00:00:00 +0200</pubDate><guid>tag:pilosa.eu,2014-08-28:blog/2014/08/28/hello-world/</guid><category>BLOG</category></item></channel></rss>